<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="ThinkDaSt">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="ThinkDaSt.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/jedis-2.8.0.jar"/>
        <pathelement location="lib/jsoup-1.8.3.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/jcommon-1.0.23.jar"/>
        <pathelement location="lib/jfreechart-1.0.19.jar"/>
        <pathelement location="lib/servlet.jar"/>
        <pathelement location="lib/ant-junit.jar"/>
        <pathelement location="lib/commons-math3-3.6.jar"/>
        <pathelement location="lib/hamcrest-library-1.3.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="WikiSearchTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="WikiSearchTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="WikiPhilosophyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="WikiPhilosophyTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="Card">
        <java classname="Card" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="Crawler">
        <java classname="com.allendowney.thinkdast.Crawler" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="CrawlerTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.allendowney.thinkdast.CrawlerTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="HelloJsoup">
        <java classname="HelloJsoup" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="Index">
        <java classname="Index" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="IndexTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="IndexTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="JedisIndex">
        <java classname="JedisIndex" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="JedisIndexTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="JedisIndexTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="JedisMaker">
        <java classname="JedisMaker" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="JedisTermCounter">
        <java classname="JedisTermCounter" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="JedisTermCounterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="JedisTermCounterTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="LinkedListExample">
        <java classname="LinkedListExample" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="ListClientExample">
        <java classname="ListClientExample" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="ListClientExampleTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="ListClientExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="ListLinks">
        <java classname="ListLinks" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="ListSorter">
        <java classname="ListSorter" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="ListSorterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="ListSorterTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="MyArrayList">
        <java classname="MyArrayList" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyArrayListSoln">
        <java classname="com.allendowney.thinkdast.MyArrayListSoln" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyArrayListTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="MyArrayListTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="MyBetterMap">
        <java classname="MyBetterMap" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyBetterMapTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="MyBetterMapTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="MyFixedHashMap">
        <java classname="MyFixedHashMap" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyFixedHashMapTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="MyFixedHashMapTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="MyHashMap">
        <java classname="MyHashMap" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyHashMapTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="MyHashMapTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="MyLinearMap">
        <java classname="MyLinearMap" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyLinearMapTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="MyLinearMapTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="MyLinkedList">
        <java classname="MyLinkedList" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyLinkedListSoln">
        <java classname="com.allendowney.thinkdast.MyLinkedListSoln" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyLinkedListTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="MyLinkedListTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="MyTreeMap">
        <java classname="MyTreeMap" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyTreeMapExample">
        <java classname="MyTreeMapExample" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="MyTreeMapTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="MyTreeMapTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="ProfileListAdd">
        <java classname="ProfileListAdd" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="ProfileMapPut">
        <java classname="ProfileMapPut" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="SelectionSort">
        <java classname="SelectionSort" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="SillyArray">
        <java classname="SillyArray" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="SillyString">
        <java classname="SillyString" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="TermCounter">
        <java classname="TermCounter" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="TermCounterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="TermCounterTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="WikiCrawler">
        <java classname="WikiCrawler" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="WikiCrawlerTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="WikiCrawlerTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="WikiFetcher">
        <java classname="WikiFetcher" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="WikiNodeExample">
        <java classname="WikiNodeExample" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="WikiParserTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="WikiParserTest" todir="${junit.output.dir}"/>
            <classpath refid="ThinkDaSt.classpath"/>
        </junit>
    </target>
    <target name="WikiPhilosophy">
        <java classname="WikiPhilosophy" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="WikiSearch">
        <java classname="WikiSearch" failonerror="true" fork="yes">
            <classpath refid="ThinkDaSt.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
